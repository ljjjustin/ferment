# lib/nova
#
# ``deploy.sh`` calls in this order:
#
# - install_nova
# - configure_nova
# - init_nova
# - start_nova
# - stop_nova
# - cleanup_nova

NOVA_DB_NAME=${NOVA_DB_NAME:-nova}
NOVA_DB_USERNAME=${NOVA_DB_USERNAME:-nova}
NOVA_DB_PASSWORD=${NOVA_DB_PASSWORD:-nova}
NOVA_OS_TENANT_NAME=${NOVA_OS_TENANT_NAME:-openstack}
NOVA_OS_USERNAME=${NOVA_OS_USERNAME:-nova}
NOVA_OS_PASSWORD=${NOVA_OS_PASSWORD:-admin}

install_nova() {
    # install nova related packages
    echo "Installing nova ..."
    install_package openstack-nova openstack-nova-console
}

configure_nova() {
    # modify nova config file
    echo "Configuring nova ..."
    nova_conf='/etc/nova/nova.conf'
    if [ -f ${nova_reg_conf} ]; then
        # database
        iniset ${nova_conf} DEFAULT sql_connection mysql://${NOVA_DB_USERNAME}:${NOVA_DB_PASSWORD}@${MYSQL_HOST}/${NOVA_DB_NAME}
        # rpc
        iniset ${nova_conf} DEFAULT rpc_backend nova.openstack.common.rpc.impl_kombu
        iniset ${nova_conf} DEFAULT rabbit_hosts ${RABBIT_HOSTS}
        iniset ${nova_conf} DEFAULT rabbit_userid guest
        iniset ${nova_conf} DEFAULT rabbit_password guest
        iniset ${nova_conf} DEFAULT rabbit_retry_interval 1
        iniset ${nova_conf} DEFAULT rabbit_retry_backoff 2
        iniset ${nova_conf} DEFAULT rabbit_max_retries 0
        iniset ${nova_conf} DEFAULT rabbit_durable_queues false
        iniset ${nova_conf} DEFAULT rabbit_ha_queues true
        # libvirt
        iniset ${nova_conf} DEFAULT connection_type libvirt
        iniset ${nova_conf} DEFAULT libvirt_type kvm
        # network
        iniset ${nova_conf} DEFAULT allow_same_net_traffic False
        iniset ${nova_conf} DEFAULT multi_host True
        iniset ${nova_conf} DEFAULT send_arp_for_ha True
        iniset ${nova_conf} DEFAULT flat_interface ${FLAT_INTERFACE}
        iniset ${nova_conf} DEFAULT public_interface ${PUBLIC_INTERFACE}
        iniset ${nova_conf} DEFAULT flat_network_bridge br100
        # vnc
        iniset ${nova_conf} DEFAULT vnc_enabled True
        iniset ${nova_conf} DEFAULT vncserver_listen 0.0.0.0
        iniset ${nova_conf} DEFAULT vncserver_proxyclient_address ${HOST_IP}
        iniset ${nova_conf} DEFAULT novncproxy_base_url http://${SERVICE_HOST}:6080/vnc_auto.html
        # glance url
        iniset ${nova_conf} DEFAULT glance_api_servers ${GLANCE_HOST}
        # keystone auth
        iniset ${nova_conf} keystone_authtoken auth_protocol http
        iniset ${nova_conf} keystone_authtoken auth_host ${KEYSTONE_HOST}
        iniset ${nova_conf} keystone_authtoken auth_port 35357
        iniset ${nova_conf} keystone_authtoken admin_tenant_name ${NOVA_OS_TENANT_NAME}
        iniset ${nova_conf} keystone_authtoken admin_user ${NOVA_OS_USERNAME}
        iniset ${nova_conf} keystone_authtoken admin_password ${NOVA_OS_PASSWORD}
        iniset ${nova_conf} keystone_authtoken singing_dir /var/lib/nova/keystone-singing-nova
    fi
    nova_api_conf='/etc/nova/api-paste.ini'
    if [ -f ${nova_api_conf} ]; then
        iniset ${nova_api_conf} filter:authtoken auth_protocol http
        iniset ${nova_api_conf} filter:authtoken auth_host ${KEYSTONE_HOST}
        iniset ${nova_api_conf} filter:authtoken auth_port 35357
        iniset ${nova_api_conf} filter:authtoken admin_tenant_name ${NOVA_OS_TENANT_NAME}
        iniset ${nova_api_conf} filter:authtoken admin_user ${NOVA_OS_USERNAME}
        iniset ${nova_api_conf} filter:authtoken admin_password ${NOVA_OS_PASSWORD}
        iniset ${nova_api_conf} filter:authtoken singing_dir /var/lib/nova/keystone-singing-nova
    fi
}

init_database() {
    local MYSQL="mysql -h${MYSQL_HOST}"
    ${MYSQL} -e "CREATE DATABASE IF NOT EXISTS ${NOVA_DB_NAME}"
    ${MYSQL} -e "GRANT ALL ON ${NOVA_DB_NAME}.* TO '${NOVA_DB_USERNAME}'@'${MYSQL_HOST}' IDENTIFIED BY '${NOVA_DB_PASSWORD}'"
    ${MYSQL} -e "FLUSH PRIVILEGES"
}

init_nova() {
    # handle database related config
    echo "Initializing nova ..."
    init_database
    nova-manage db sync
}

start_nova() {
    # start nova services
    echo "Starting nova ..."
}

stop_nova() {
    # stop nova services
    echo "Stopping nova ..."
}

cleanup_nova() {
    # clean up nova packages
    echo "Cleaning up nova ..."
    remove_package openstack-nova openstack-nova-console
}
