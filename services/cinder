# lib/cinder
#
# ``deploy.sh`` calls in this order:
#
# - install_cinder
# - configure_cinder
# - init_cinder
# - start_cinder
# - stop_cinder
# - cleanup_cinder

CINDER_DB_NAME=${CINDER_DB_NAME:-cinder}
CINDER_DB_USERNAME=${CINDER_DB_USERNAME:-cinder}
CINDER_DB_PASSWORD=${CINDER_DB_PASSWORD:-cinder}
CINDER_OS_TENANT_NAME=${CINDER_OS_TENANT_NAME:-openstack}
CINDER_OS_USERNAME=${CINDER_OS_USERNAME:-cinder}
CINDER_OS_PASSWORD=${CINDER_OS_PASSWORD:-admin}

CINDER_BIND_HOST=${CINDER_BIND_HOST:-$HOST_ADDRESS}

install_cinder() {
    echo "Installing cinder ..."
    # install cinder related packages
    install_package openstack-cinder
}

configure_cinder() {
    echo "Configuring cinder ..."
    # modify cinder config file
    local cinder_conf='/etc/cinder/cinder.conf'
    if [[ -f "${cinder_conf}" ]]; then
        # database
        iniset ${cinder_conf} database connection mysql://${CINDER_DB_USERNAME}:${CINDER_DB_PASSWORD}@${MYSQL_HOST}/${CINDER_DB_NAME}
        # rpc
        iniset ${cinder_conf} DEFAULT rpc_backend rabbit
        iniset ${cinder_conf} oslo_messaging_rabbit rabbit_hosts "${RABBIT_HOSTS}"
        iniset ${cinder_conf} oslo_messaging_rabbit rabbit_userid "guest"
        iniset ${cinder_conf} oslo_messaging_rabbit rabbit_password "guest"
        # keystone auth
        iniset ${cinder_conf} DEFAULT auth_strategy keystone
        iniset ${cinder_conf} keystone_authtoken auth_uri http://${SERVICE_HOST}:5000
        iniset ${cinder_conf} keystone_authtoken auth_url http://${SERVICE_HOST}:35357
        iniset ${cinder_conf} keystone_authtoken auth_plugin password
        iniset ${cinder_conf} keystone_authtoken project_domain_id default
        iniset ${cinder_conf} keystone_authtoken user_domain_id default
        iniset ${cinder_conf} keystone_authtoken project_name ${CINDER_OS_TENANT_NAME}
        iniset ${cinder_conf} keystone_authtoken username ${CINDER_OS_USERNAME}
        iniset ${cinder_conf} keystone_authtoken password ${CINDER_OS_PASSWORD}
        # oslo concurrentcy
        iniset ${cinder_conf} oslo_concurrency lock_path "/var/lib/cinder/tmp"
        # misc
        iniset ${cinder_conf} DEFAULT my_ip "${HOST_ADDRESS}"
    fi
    local nova_conf='/etc/nova/nova.conf'
    if [[ -f "${nova_conf}" && is_compute_node ]]; then
        iniset ${nova_conf} cinder os_region_name RegionOne
    fi
}

init_database() {
    ensure_mysql_database "${MYSQL_HOST}" "${CINDER_DB_USERNAME}" "${CINDER_DB_PASSWORD}" "${CINDER_DB_NAME}"
}

ensure_cinder_service_catalog() {
    local service_desc='OpenStack Block Storage'
    local service_name_v1='cinder'
    local service_type_v1='volume'
    local public_url_v1="http://${SERVICE_HOST}:8776/v1/\$(tenant_id)s"
    local internal_url_v1="http://${SERVICE_HOST}:8776/v1/\$(tenant_id)s"
    local admin_url_v1="http://${SERVICE_HOST}:8776/v1/\$(tenant_id)s"
    local service_name_v2='cinderv2'
    local service_type_v2='volumev2'
    local public_url_v2="http://${SERVICE_HOST}:8776/v2/\$(tenant_id)s"
    local internal_url_v2="http://${SERVICE_HOST}:8776/v2/\$(tenant_id)s"
    local admin_url_v2="http://${SERVICE_HOST}:8776/v2/\$(tenant_id)s"

    ensure_keystone_service "${service_name_v1}" "${service_type_v1}" "${service_desc}" "${public_url_v1}" "${internal_url_v1}" "${admin_url_v1}"
    ensure_keystone_service "${service_name_v2}" "${service_type_v2}" "${service_desc}" "${public_url_v2}" "${internal_url_v2}" "${admin_url_v2}"

    ensure_keystone_accounts "${CINDER_OS_TENANT_NAME}" "${CINDER_OS_USERNAME}" "${CINDER_OS_PASSWORD}" 'admin'
}

init_cinder() {
    echo "Initializing cinder ..."
    enable_service openstack-cinder-api

    # handle database related config
    init_database
    cinder-manage db sync
    chown cinder:cinder /var/log/cinder
    chown cinder:cinder /var/log/cinder/*
    ensure_cinder_service_catalog
}

start_cinder() {
    # start cinder services
    echo "Starting cinder ..."
    start_service openstack-cinder-api
}

stop_cinder() {
    # stop cinder services
    echo "Stopping cinder ..."
    stop_service openstack-cinder-api
}

cleanup_cinder() {
    # clean up cinder packages
    echo "Cleaning up cinder ..."
    remove_package openstack-cinder
}
